package {{$generatedArtifactPackageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * Common object handle for domain {@link {{$sourceArtifactSimpleName}}}.<p/>
 *
 * This class was generated automatically. Don't try to change it.
 */
@ObjectHandle({{$sourceArtifactSimpleName}}.class)
{{$generatedAnnotation}}
{{when $isAlias}}
public interface {{$generatedArtifactSimpleName}}{{$domainTypeParamsFull}} extends {{$primaryObjectHandle}} {

  default Type<{{$primaryDomainSimpleName}}{{$primaryDomainTypeArguments}}> domain() {
    return {{$domainType}}
  }
{{else}}
public interface {{$generatedArtifactSimpleName}}{{$domainTypeParamsFull}} extends tech.intellispaces.jaquarius.object.reference.ObjectHandle<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}> {

  default Type<{{$sourceArtifactSimpleName}}{{$domainTypeParamsBrief}}> domain() {
    return {{$domainType}}
  }
{{end}}

  default Class<?> domainClass() {
    return {{$primaryDomainSimpleName}}.class;
  }

  @Override
  default boolean isFocused() {
    return true;
  }

{{for method : $domainMethods}}
  {{$method."javadoc"}}
  {{$method."declaration"}};

{{end}}
  {{$movableClassSimpleName}}{{$domainTypeParamsBrief}} asMovableOrElseThrow();

  <T, Q, C extends Channel1 & MappingChannel> T mapThru(Class<C> channelClass, Q qualifier) throws TraverseException;
}

package {{$generatedArtifactPackageName}};

{{for importedClass : $importedClasses}}
import {{$importedClass}};
{{end}}

/**
 * The assistant of objects of domain  {@link {{$sourceArtifactSimpleName}}}.
 * <p>
 * This class was generated automatically. Don't try to change it.
 */
{{$generatedAnnotation}}
public class {{$generatedArtifactSimpleName}} {

{{when $isDataset}}
  public static {{$datasetBuilderSimpleName}} build() {
    return new {{$datasetBuilderSimpleName}}();
  }
{{end}}

{{for method : $extensionMethods}}
  public static {{$method["signature"]}} {
    return ({{$method["returnTypeDeclaration"]}}) broker.{{$method["name"]}}({{$method["paramNames"]}});
  }

{{end}}
  @SuppressWarnings("unchecked")
  public static {{$typeParamsFull}} {{$generalObjectHandleSimpleName}}{{$typeParamsBrief}} {{$plainFirstLetterLowercaseSimpleName}}Handle(Object object{{for typeParam : $typeParams}}, Class<{{$typeParam["type"]}}> {{$typeParam["name"]}}{{end}}) {
    if (object == null) {
      return null;
    }
    if ({{$generalObjectHandleSimpleName}}.class.isAssignableFrom(object.getClass())) {
      return ({{$generalObjectHandleSimpleName}}{{$typeParamsBrief}}) object;
    }
    throw UnexpectedExceptions.withMessage("The object is not a object handle of the domain {{$sourceArtifactSimpleName}}");
  }

  private {{$generatedArtifactSimpleName}}() {}

{{when $extensionMethods.isNotEmpty()}}
  private static final {{$brokerSimpleName}} broker = new {{$brokerSimpleName}}();
{{end}}
}
